{
    "items": [
        {
            "Company/Org": "Snyk",
            "Tool/Product/Project": "Snyk Open Source",
            "Reviewed": "2021-08-05",
            "Scheduled for": "2021-08-05",
            "URL": "https://snyk.io/product/open-source-security-management/?utm_medium=Organic-Email&utm_source=consoledev&utm_content=snyk-open-source",
            "Category": "Security - Vulnerability management",
            "Type": "SaaS",
            "What is it?": "Dependency security monitoring for open source.",
            "Len": "155",
            "What we like": "Easy to see security status for everything. Scans full dependency tree revealing your actual security posture e.g. vulns in dependency dependencies. Relative severity scoring helps understand how relevant issues are. Inspects containers & OS packages as well as code. Separates dev dependencies from prod. Multiple options for fixes e.g. via CLI, not just PRs.",
            "What we dislike": "Showing vulnerabilities in dependency dependencies is interesting, but what are you going to do about them? CLI to apply fixes still in beta (Python only).",
            "Interview": "",
            "favicon": "img/favicons/snyk.io.ico",
            "Top Category": "Security",
            "Sub Category": "Vulnerability management",
            "Filter Taxonomy": "security, saas"
        },
        {
            "Company/Org": "OSSF",
            "Tool/Product/Project": "Security Scorecard",
            "Reviewed": "2021-08-05",
            "Scheduled for": "2021-08-05",
            "URL": "https://github.com/ossf/scorecard",
            "Category": "Security - Vulnerability management",
            "Type": "Open Source",
            "What is it?": "Security health metrics for open source.",
            "Len": "188",
            "What we like": "Assessment criteria are objective, consistent and documented so OSS projects can start to adopt them. Makes it easy to assess the security posture of the projects you rely on. CLI output is clear why a check fails. Can scan a GitHub repo or infer it from npm, pypi or rubygem package names. JSON or CSV output means results can be scripted.",
            "What we dislike": "Some assessment criteria (such as looking for commits from >1 GitHub organizations) may be onerous for small, one-person projects. No easy way to integrate into CI/CD yet (on the roadmap).",
            "Interview": "",
            "favicon": "img/favicons/github.com.png",
            "Top Category": "Security",
            "Sub Category": "Vulnerability management",
            "Filter Taxonomy": "security, open-source"
        }
    ]
}