{
    "items": [
        {
            "Company/Org": "Liveblocks",
            "Tool/Product/Project": "Liveblocks",
            "Reviewed": "2021-07-16",
            "Scheduled for": "2021-07-29",
            "URL": "https://liveblocks.io/",
            "Category": "Developer Tools - Frontend framework",
            "Type": "SaaS",
            "What is it?": "Real-time collaboration API.",
            "Len": "193",
            "What we like": "Components to easily add live presence (live cursors, chat and reactions). Abstracts away the backend implementation challenges - networking, performance, presence detection, multi-browser support. Vendored as React / Node packages. Auth hooks to validate user permissions. Examples for raw JS, Next.js, Nuxt.js and React + Firebase.",
            "What we dislike": "Assumes you\u2019re building with web technologies i.e. JS. No mobile support. Still requires implementing authentication. Classic build vs buy - is it a good use of your time to try and build this?",
            "Interview": "/interviews/liveblocks-guillaume-salles/",
            "favicon": "img/favicons/liveblocks.io.png",
            "Top Category": "Developer Tools",
            "Sub Category": "Frontend framework",
            "Filter Taxonomy": "developer-tools, saas"
        },
        {
            "Company/Org": "Livekit",
            "Tool/Product/Project": "Livekit",
            "Reviewed": "2021-07-19",
            "Scheduled for": "2021-07-29",
            "URL": "https://livekit.io/",
            "Category": "API - Communication",
            "Type": "Open Source",
            "What is it?": "Open source live video and audio API.",
            "Len": "217",
            "What we like": "SDKs for React, JS, iOS and Android to build video / audio without needing to understand WebRTC. Selective Forwarding Unit server makes it easy to scale from P2P to supporting large numbers of participants. Server scales horizontally using Redis as the backend. Automatically supports different connection types (UDP, TCP, TURN) and simulcasting.",
            "What we dislike": "Still need to set up SSL + load balancers. Using a server component defeats the idea of P2P. Your code still needs to deal with issuing access tokens to each participant. Simulcasting only works in the browser/JS SDK.",
            "Interview": "",
            "favicon": "img/favicons/livekit.io.ico",
            "Top Category": "API",
            "Sub Category": "Communication",
            "Filter Taxonomy": "api, open-source"
        }
    ]
}