{"items": [{"Company/Org": "Temporal", "Tool/Product/Project": "Temporal", "Reviewed": "2021-03-16", "Scheduled for": "2021-04-01", "URL": "https://temporal.io/", "Category": "API", "Type": "Open Source", "What is it?": "Framework for workflow orchestration.", "What we like": "Deals with the underlying infrastructure for reliable task execution: state management, retries, scaling, fault tolerance. Avoid building and running your own timers / queues - just write the function business logic. Open source server you can run yourself, or use their cloud option (in private beta).", "What we dislike": "SDKs are still being built out (currently available for Go, Java, PHP, Ruby). You still need to run / scale your own database (Cassandra, MySQL, or PostgreSQL). ", "Twitter": "@temporalio", "Source": "COSS Funding List", "favicon": "img/favicons/temporal.io.png", "Filter Taxonomy": "api, open-source"}, {"Company/Org": "Mirage JS", "Tool/Product/Project": "Mirage JS", "Reviewed": "2021-03-29", "Scheduled for": "2021-04-01", "URL": "https://miragejs.com", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "API mocking library for frontend developers.", "What we like": "Intercepts all XMLHttpRequest and fetch requests so no code changes required (one additional import). Includes in-memory database for persistence tests. Can simulate slow responses or errors. Built-in ORM handles data relationships, output formatting, serialization.", "What we dislike": "Only supports REST APIs out of the box - GraphQL available as an optional plugin (still in development). Runs in the browser, not as a server, so it cannot be used to mock server-side APIs.", "Twitter": "@miragejs", "Source": "", "favicon": "img/favicons/miragejs.com.png", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "git-plan", "Tool/Product/Project": "git-plan", "Reviewed": "2021-03-30", "Scheduled for": "2021-04-01", "URL": "https://github.com/synek/git-plan", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "Git workflow for planning / writing commits in advance.", "What we like": "Forces you to think about what you are going to work on in advance - writing out a plan probably helps improve your thinking, and also creates better commit messages. If you think of something you need to switch to, you can create a plan whilst it\u2019s still top-of-mind, then come back to it later.", "What we dislike": "Unintuitive to begin with, but makes sense once you try it (see blog posts linked in the project readme for guidance). Interactive rebasing is an alternative that doesn\u2019t force you to reverse your workflow.", "Twitter": "@ryrobyrne", "Source": "Lobsters", "favicon": "img/favicons/github.com.png", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "WayScript", "Tool/Product/Project": "WayScript", "Reviewed": "2021-03-05", "Scheduled for": "2021-03-25", "URL": "https://wayscript.com", "Category": "Developer Tools", "Type": "SaaS", "What is it?": "Rapid API scripting platform.", "What we like": "Quickly create step function APIs from lots of pre-built integrations. Cron support. Connect to external data sources and manipulate data. Write real Python, JS, Java, shell script, GraphQL, HTML, and SQL (including using packaged dependencies) as separate steps. Configurable editor e.g. use vim keybindings, tabs vs spaces, etc.", "What we dislike": "Can be slow to execute (many seconds) especially with lots of steps. Have to use their browser editor - can\u2019t develop and run code locally (this is on the roadmap).", "Twitter": "@WayScriptHQ", "Source": "HN Funding", "favicon": "img/favicons/wayscript.com.png", "Filter Taxonomy": "developer-tools, saas"}, {"Company/Org": "Buddy", "Tool/Product/Project": "Buddy", "Reviewed": "2021-03-01", "Scheduled for": "2021-03-25", "URL": "https://buddy.works/", "Category": "DevOps", "Type": "SaaS", "What is it?": "CI/CD.", "What we like": "Fast execution of steps due to caching. Can retry builds from specific steps and live-debug in a terminal which makes setting up pipelines easier. Can switch between UI or YAML config. Commenting/sharing helps team collaboration. UI has useful features, such as env var autocompletion.", "What we dislike": "Ecosystem of official build actions is small relative to GitHub Actions. UI is sometimes confusing due to the number of config options.", "Twitter": "@buddygit", "Source": "", "favicon": "img/favicons/buddy.works.png", "Filter Taxonomy": "devops, saas"}, {"Company/Org": "ORY", "Tool/Product/Project": "Kratos", "Reviewed": "2021-03-11", "Scheduled for": "2021-03-18", "URL": "https://www.ory.sh/kratos", "Category": "API", "Type": "Open Source", "What is it?": "Cloud native user management.", "What we like": "Open source & self hosted: you probably don't want to build all your own user management (signup, login, MFA, FIDO2, etc) but do care about control and ownership. Runs as a compact, single Go binary. JSON Schema data model. Headless; example UI and API SDKs for Python, PHP, Node, Go, Java, Ruby. Scale horizontally.", "What we dislike": "Focus on APIs means there is no admin UI. Federation (OAuth2, OpenID) requires a separate project (ORY Hydra). \"Scale horizontally\" still means you need to scale your own RDBMS. Pre-1.0, targeting \"stable\" in 2022.", "Twitter": "@OryCorp", "Source": "HN Comment", "favicon": "img/favicons/www.ory.sh.png", "Filter Taxonomy": "api, open-source"}, {"Company/Org": "Chris Walz", "Tool/Product/Project": "bit", "Reviewed": "2021-03-01", "Scheduled for": "2021-03-18", "URL": "https://github.com/chriswalz/bit", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "git CLI.", "What we like": "Autocomplete and flag suggestions. Commands such as release or sync combine several commands in one to speed up common tasks. Branch autocomplete for checkout. GitHub PR integration. Support for themes. Open source & cross platform.", "What we dislike": "Not what you might expect from a cli: you run the bit command, then it suggests subcommands and flags, rather than tab completion. Official OS packages missing on Linux.", "Twitter": "@chriswalz___", "Source": "", "favicon": "img/favicons/github.com.png", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "Bird Eats Bug", "Tool/Product/Project": "Bird Eats Bug", "Reviewed": "2021-03-01", "Scheduled for": "2021-03-11", "URL": "https://birdeatsbug.com", "Category": "Developer Tools", "Type": "Desktop", "What is it?": "Screensharing with technical metadata.", "What we like": "Captures screenshare and click journey with associated metadata like console and network logs. Local-first; uploadable for sharing (private or public). Quick submit to JIRA, Linear, Trello.", "What we dislike": "Chrome only (works on Microsoft Edge). More integrations needed e.g. GitHub Issues.", "Twitter": "@birdeatsbug", "Source": "Crunchbase Funding", "favicon": "img/favicons/birdeatsbug.com.png", "Filter Taxonomy": "developer-tools, desktop"}, {"Company/Org": "Earthly", "Tool/Product/Project": "Earthly", "Reviewed": "2021-03-04", "Scheduled for": "2021-03-11", "URL": "https://earthly.dev", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "Containerized reproducible builds.", "What we like": "Runs existing build steps inside a container using your existing CI system (Jenkins, CircleCI, GitHub Actions, etc). This makes builds reproducible locally so they run the same on your laptop as in remote CI. Steps can be parallelized. Dependency caching locally and across repos.", "What we dislike": "Assumes you are building an already containerized application. Multi-platform builds are experimental.", "Twitter": "@earthlytech", "Source": "HN", "favicon": "img/favicons/earthly.dev.png", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "Microsoft", "Tool/Product/Project": "Playwright", "Reviewed": "2021-03-03", "Scheduled for": "2021-03-04", "URL": "https://playwright.dev", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "Automate Chromium, Firefox & Webkit with a single API.", "What we like": "Single API to launch and script Chromium, Firefox and WebKit. Emulate devices for testing responsiveness. Auto-wait API avoids hard coding timeouts. Extract screenshots, video and debug info. Library for JS, TypeScript, Python, C#, Java. Works on Windows, macOS, Linux.", "What we dislike": "Only supports latest browser versions - can\u2019t pick older versions to test against. Browser binaries are quite large so may slow down CI/CD (cache is configurable).", "Twitter": "@playwrightweb", "Source": "", "favicon": "img/favicons/playwright.dev.svg", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "Stoplight", "Tool/Product/Project": "Stoplight", "Reviewed": "2021-03-02", "Scheduled for": "2021-03-04", "URL": "https://stoplight.io", "Category": "Developer Tools", "Type": "SaaS", "What is it?": "API design and development platform.", "What we like": "Build OpenAPI (v2 Swagger or v3) compliant APIs with auto-generated docs, example code, and mocking. Write docs in Markdown. Save everything (and load existing APIs) from Git. Offline/local dev support with desktop API studio app.", "What we dislike": "Limited ability to customize doc output to fit into your own design/brand. Some editor/docs UI bugs in Firefox. It does work without using OpenAPI specs, but most features assume you do.", "Twitter": "@stoplightio", "Source": "Crunchbase Funding", "favicon": "img/favicons/stoplight.io.png", "Filter Taxonomy": "developer-tools, saas"}, {"Company/Org": "Raycast", "Tool/Product/Project": "Raycast", "Reviewed": "2021-02-22", "Scheduled for": "2021-02-25", "URL": "https://raycast.com", "Category": "Developer Tools", "Type": "Desktop", "What is it?": "Quick-launcher for developers.", "What we like": "Search cloud and local documents. Clipboard history. Manage GitHub PRs, JIRA issues, join Zoom calls, schedule calendar blocks. API and scripting to create your own commands. Tiling window management. Connects directly to remote services to avoid privacy issues.", "What we dislike": "macOS only. Shortcuts for sub-commands are difficult to find. File search requires scoping rather than searching everywhere.", "Twitter": "@raycast", "Source": "", "favicon": "img/favicons/raycast.com.png", "Filter Taxonomy": "developer-tools, desktop"}, {"Company/Org": "DBCLI", "Tool/Product/Project": "DBCLI", "Reviewed": "2021-02-22", "Scheduled for": "2021-02-25", "URL": "https://www.dbcli.com", "Category": "Database", "Type": "Desktop", "What is it?": "CLIs for databases.", "What we like": "Autocomplete and syntax highlighted output. Support for Postgres, MySQL, SQLite, MSSQL, Redis, AWS Athena. History, search, vi/Emacs keybindings, saved queries. Open source & cross-platform.", "What we dislike": "Only available via pip or brew - official OS packages would make installation easier to integrate with native package management. Installation on Windows is a hassle due to needing Python. Large results don't line-wrap well.", "Twitter": "@amjithr", "Source": "", "favicon": "img/favicons/www.dbcli.com.png", "Filter Taxonomy": "database, desktop"}, {"Company/Org": "Accurics", "Tool/Product/Project": "Terrascan", "Reviewed": "2021-02-16", "Scheduled for": "2021-02-18", "URL": "https://github.com/accurics/terrascan", "Category": "DevOps", "Type": "Open Source", "What is it?": "Static code analyzer for Infrastructure as Code.", "What we like": "Scans Terraform, k8s, and Helm configs for security and compliance. Supports AWS, Azure, GCP, Kubernetes, GitHub and has lots of sensible policy defaults which can be extended using the Open Policy Agent Rego language. Can be run in CI/CD.", "What we dislike": "Docs need work: quickstart didn't work smoothly and default policies are not well explained. Explanations of how to rectify policy violations would help.", "Twitter": "@AccuricsSec", "Source": "GitHub Trending Repos", "favicon": "img/favicons/github.com.png", "Filter Taxonomy": "devops, open-source"}, {"Company/Org": "Oso", "Tool/Product/Project": "Oso", "Reviewed": "2021-02-15", "Scheduled for": "2021-02-18", "URL": "https://www.osohq.com/", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "A system for building application authorization.", "What we like": "Flexible, declarative language for describing simple or complex access control rules in code. Easy to test policies. Native libraries for NodeJS, Java, Python, Ruby, Go, Rust. Useful tooling: debugger, tracer, and VS Code integration.", "What we dislike": "Focused only on authorization, so you need to build your own authentication (signup, login, forgot password, etc).", "Twitter": "@osoHQ", "Source": "Inbound", "favicon": "img/favicons/www.osohq.com.png", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "GitPod", "Tool/Product/Project": "GitPod", "Reviewed": "2021-02-09", "Scheduled for": "2021-02-11", "URL": "https://www.gitpod.io", "Category": "Developer Tools", "Type": "SaaS", "What is it?": "Dev environments as code and hosted in the cloud.", "What we like": ".gitpod.yml file in the repo describes the full dev environment so it's version controlled and always up to date. GitPod pre-builds after every commit so the environment is ready when you activate it. VS Code in the browser means you can develop anywhere on any machine. Easily switch workspaces e.g. to review a pull request without disrupting your current environment. Self-hosted version so you can run it all yourself (some features limited to paid license).", "What we dislike": "Limited IDE support - VS Code or Theia (based on VS Code) means you have to code in the browser so you can't use your own IDE/editor (support for other IDEs in development). Requires you to be online with good connectivity because everything is remote.", "Twitter": "@gitpod", "Source": "Inbound", "favicon": "img/favicons/www.gitpod.io.png", "Filter Taxonomy": "developer-tools, saas"}, {"Company/Org": "asdf", "Tool/Product/Project": "asdf", "Reviewed": "2021-02-04", "Scheduled for": "2021-02-11", "URL": "https://asdf-vm.com/", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "A CLI to manage language runtimes.", "What we like": "Makes it easy to switch language runtime versions without messing up the system install (if any). Lots of plugins so it supports pretty much every language. Configs can be defined in a per-project file so it can auto switch based on current working directory. Means you can forget about language specific virtual environments because asdf manages them for you. Has an official GitHub Action.", "What we dislike": "Language support is via community plugins so quality is variable. Windows support still in development.", "Twitter": "@HashNuke", "Source": "HN", "favicon": false, "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "StackHawk", "Tool/Product/Project": "StackHawk", "Reviewed": "2021-02-05", "Scheduled for": "2021-02-11", "URL": "https://www.stackhawk.com/", "Category": "Developer Tools", "Type": "SaaS", "What is it?": "Black box security scanning for developers.", "What we like": "An easy way for developers to run a standardized suite of black box tests. Spiders and auto-discovers endpoints so there is almost zero config. Runs inside a container so it can be run anywhere. Web UI highlights and prioritizes all detected vulnerabilities. Can easily be run locally against any local or remote endpoint. Built on top of open source OWASP ZAP. Good quality documentation. Integrations into CI/CD e.g. GitHub Actions, GitLab, CircleCI.", "What we dislike": "Assumes you know about OWASP and how to resolve highlighted issues. The nature of black box testing means some OWASP issues are false positives and are not comprehensive e.g. no detection of dependency vulnerabilities. Large example app takes >25min to scan (although our own simple app took <1 min).", "Twitter": "@stackhawk", "Source": "Inbound", "favicon": "img/favicons/www.stackhawk.com.png", "Filter Taxonomy": "developer-tools, saas"}, {"Company/Org": "Opstrace", "Tool/Product/Project": "Opstrace", "Reviewed": "2021-02-02", "Scheduled for": "2021-02-04", "URL": "https://opstrace.com", "Category": "DevOps", "Type": "Open Source", "What is it?": "A management layer on top of independent open source observability tools", "What we like": "Automates deployment of Prometheus, Cortex, and Loki and configures them to store data in your own S3 or GCS buckets. This means you keep control of the data and the price of storage from your existing cloud provider.  Supports multiple tenants e.g. prod vs dev, and deals with scaling them. Existing Prometheus instances can be configured to send data to Opstrace.", "What we dislike": "Installation and cluster management are the main differentiator - otherwise it's just packaging open source projects. API uses an Opstrace managed endpoint - custom domains supported only in the commercial version which is hidden behind \"contact us\". If you already have Prometheus, you could just set up Cortex yourself. Only supports AWS and GCP. No Windows support.", "Twitter": "@opstrace", "Source": "HN", "favicon": "img/favicons/opstrace.com.png", "Filter Taxonomy": "devops, open-source"}, {"Company/Org": "Nushell", "Tool/Product/Project": "Nushell", "Reviewed": "2021-02-02", "Scheduled for": "2021-02-04", "URL": "https://www.nushell.sh", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "A shell where everything is data.", "What we like": "The first thing you notice is running `ls` outputs a structured table. All output is actually data, so it is like interacting with a spreadsheet. Nushell applies the Unix philosophy of piping commands but allows for commands like `ls | where size > 1kb`. Supports parsing data like CSV and JSON. You can script your own commands. Cross platform.", "What we dislike": "Although it can be run as a command, it is designed to replace your existing shell. It is still in development so may not be stable. You will have to reconfigure everything if you have heavily customized your shell.", "Twitter": "@nu_shell", "Source": "GitHub Trending Repos", "favicon": "img/favicons/www.nushell.sh.png", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "EteSync", "Tool/Product/Project": "Etebase", "Reviewed": "2021-02-03", "Scheduled for": "2021-02-04", "URL": "https://www.etebase.com/", "Category": "Database", "Type": "Open Source", "What is it?": "E2E encrypted Firebase-like database and SDK.", "What we like": "Open source end-to-end encryption based on libsodium. SDKs for JS, Python, Java, Kotlin, C/C++, Rust. Handles sync and user sharing e.g. users collaborating on an encrypted doc. Has specialist types for calendars, tasks, and Markdown notes. Supported by a foundation and a European Commission program.", "What we dislike": "A cloud service by default but you can run their open source server component. No pricing yet for the commercial cloud version. Large files not supported (on the roadmap). Local cache but no offline storage.", "Twitter": "@EteSyncHQ", "Source": "HN", "favicon": "img/favicons/www.etebase.com.png", "Filter Taxonomy": "database, open-source"}, {"Company/Org": "Infracost", "Tool/Product/Project": "Infracost", "Reviewed": "2021-01-27", "Scheduled for": "2021-01-28", "URL": "https://github.com/infracost/infracost", "Category": "Cloud", "Type": "Open Source", "What is it?": "Cloud cost estimates for Terraform.", "What we like": "Integrates with CI (GitHub, GitLab, CircleCI, Bitbucket) to provide cost diffs for pull requests. Supports AWS and Google Cloud.", "What we dislike": "Uses a Cloud Pricing API provided (for free) by the Infracost project so it requires sending data to it (you can self-host). May be out of date. Only supports AWS and Google Cloud. Other cloud vendors planned.", "Twitter": "@hassankhosseini", "Source": "GitNews", "favicon": "img/favicons/github.com.png", "Filter Taxonomy": "cloud, open-source"}, {"Company/Org": "LocalStack", "Tool/Product/Project": "LocalStack", "Reviewed": "2021-01-27", "Scheduled for": "2021-01-28", "URL": "https://localstack.cloud/", "Category": "Cloud", "Type": "N/A", "What is it?": "Test/mocking framework replicating AWS APIs locally.", "What we like": "Deploy a full AWS stack in a local Docker container. Avoid paying for AWS environments for test/dev. Supports key AWS services like DynamoDB, EC2, Kinesis, Lambda, Route53, SNS, SQS. Allows you to inject errors.", "What we dislike": "Some APIs require the paid version e.g. CloudFront, Cognito, ElastiCache, Glacier, RDS. Not built by AWS so will always lag behind the real thing. Good for dev but testing probably better done against the actual APIs.", "Twitter": "@_localstack", "Source": "GitHub Trending Repos", "favicon": "img/favicons/localstack.cloud.png", "Filter Taxonomy": "cloud, n/a"}, {"Company/Org": "rsync.net", "Tool/Product/Project": "rclone on rsync.net", "Reviewed": "2021-01-27", "Scheduled for": "2021-01-28", "URL": "https://www.rsync.net/products/universal.html", "Category": "Cloud", "Type": "N/A", "What is it?": "Store immutable backups of cloud accounts.", "What we like": "rsync.net is a Unix (ZFS) filesystem over SSH but also supports commands like borg, git, rsync, s3cmd, and now rclone. rclone is a separate open source project that exposes many cloud accounts as filesystems e.g. Google Photos, Dropbox, Azure Blob storage. rsync.net connects directly so you can copy from one to the other without downloading/uploading.", "What we dislike": "This is truly a filesystem over SSH so you need to know your way around the command line. Documentation is limited and the account manager UI is dated. No support for scheduling execution so you need to handle that yourself e.g. cron, systemd.", "Twitter": "@rsyncnet", "Source": "HN", "favicon": "img/favicons/www.rsync.net.ico", "Filter Taxonomy": "cloud, n/a"}, {"Company/Org": "laktak", "Tool/Product/Project": "extrakto for tmux", "Reviewed": "2021-01-22", "Scheduled for": "2021-01-28", "URL": "https://github.com/laktak/extrakto", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "Quickly select, copy/paste, complete text without a mouse.", "What we like": "The whole idea behind using the command line is to make things faster, usually using the keyboard. This helps with that goal by improving select, copy and paste inside tmux. It works everywhere, even in SSH sessions. Works with clipboards on Linux, macOS, and Windows.", "What we dislike": "tmux beta release is required for popups, otherwise this currently uses a new split window.", "Twitter": "@laktakk", "Source": "GitNews", "favicon": "img/favicons/github.com.png", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "Seed", "Tool/Product/Project": "Seed", "Reviewed": "2021-01-20", "Scheduled for": "2021-01-21", "URL": "https://seed.run/", "Category": "DevOps", "Type": "SaaS", "What is it?": "Managed CI/CD pipeline for serverless on AWS.", "What we like": "Managing lots of individual Lambdas across environments and regions is a pain because of how long it takes to package and deploy, especially with AWS rate limits. Seed hooks into Git and speeds things up by deploying concurrently. Supports Serverless Framework, caching dependencies, and incremental deploys. Built-in Lambda monitoring for errors. Also supports AWS CDK.", "What we dislike": "Only supports AWS Serverless i.e. Lambda, so unless you are 100% Lambda then this will be a separate CD pipeline to manage. Doesn't support other tech like containers, or other platforms like Azure/Google. Those with just a few, simple Lambdas may find it overkill.", "Twitter": "@SEED_run", "Source": "Show HN", "favicon": "img/favicons/seed.run.png", "Filter Taxonomy": "devops, saas"}, {"Company/Org": "Brave", "Tool/Product/Project": "IPFS Support in Brave", "Reviewed": "2021-01-20", "Scheduled for": "2021-01-21", "URL": "https://brave.com/ipfs-support/", "Category": "Misc", "Type": "Open Source", "What is it?": "Support for accessing content over the decentralized network, IPFS.", "What we like": "Decentralized filesystems allow access to content without relying on a specific host. This makes them resistent to censorship (or outages, deletion, etc). IPFS can be a pain to run, or you have to use a gateway service. Built-in browser support means users don't have to care, just like with HTTP. Brave is based on Chromium (but better privacy than Chrome) so most sites work fine.", "What we dislike": "Brave is still a niche browser, and IPFS is still very early. How much content is hosted on it? Site owners need to upload (pin) their content to IPFS, which isn't necessarily straightforward. Still requires the use of ipfs:// URLs, although DNSLink support for using DNS TXT records is planned.", "Twitter": "@brave", "Source": "HN", "favicon": "img/favicons/brave.com.png", "Filter Taxonomy": "misc, open-source"}, {"Company/Org": "Yifan Gu", "Tool/Product/Project": "VMCLI", "Reviewed": "2021-01-15", "Scheduled for": "2021-01-21", "URL": "https://github.com/gyf304/vmcli", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "Utilities for managing VMs on macOS.", "What we like": "macOS Big Sur includes a new framework for managing VMs. This CLI makes it easy to run VMs without additional software i.e. using the new Virtualization.framework. Means you don't need Virtual Box, VMWare, etc for simple VM tasks.", "What we dislike": "Obviously macOS-only. Only basic functionality for using VMs (probably fine for developers).", "Twitter": "", "Source": "HN", "favicon": "img/favicons/github.com.png", "Filter Taxonomy": "developer-tools, open-source"}, {"Company/Org": "Vantage", "Tool/Product/Project": "Vantage", "Reviewed": "2021-01-13", "Scheduled for": "2021-01-14", "URL": "https://www.vantage.sh/", "Category": "Cloud", "Type": "SaaS", "What is it?": "AWS Console designed for developers.", "What we like": "AWS Console UX is not great; Vantage is much cleaner and faster. It connects using a read-only CloudFormation IAM Role and they have detailed documentation about the read-only permissions it requests. \"Views\" nicely segment/group resources, even across accounts and regions, with global search for them all. Cost reporting by view and weekly email reports help you manage budgets better.", "What we dislike": "Does not support all AWS products, currently focused on a few key resources e.g. EC2 instances, VPC Subnets, Route53, etc. Currently read-only, which is good for security and because it's a new tool - plans to add more management features in the future. Also AWS-only, but they are working on other cloud providers.", "Twitter": "@JoinVantage", "Source": "Show HN", "favicon": "img/favicons/www.vantage.sh.png", "Filter Taxonomy": "cloud, saas"}, {"Company/Org": "Skynet", "Tool/Product/Project": "Skynet", "Reviewed": "2021-01-13", "Scheduled for": "2021-01-14", "URL": "https://siasky.net/", "Category": "API", "Type": "Open Source", "What is it?": "Decentralized file storage and CDN.", "What we like": "Web UI and SDKs for uploading files to a decentralized CDN. Uses a blockchain and rewards users who run nodes with coins which can be exchanged for money. Current average cost = $4.16/TB stored + $1.25/TB transferred.", "What we dislike": "Time to first byte 300-500ms may be prohibitatively slow for some use cases. Streaming \"up to 1Gbps\" but what does \"up to\" really mean? Files must be public. Why call it \"Skynet\"?!", "Twitter": "@siatechhq", "Source": "Changelog", "favicon": "img/favicons/siasky.net.png", "Filter Taxonomy": "api, open-source"}, {"Company/Org": "James Little", "Tool/Product/Project": "Stork Search", "Reviewed": "2021-01-13", "Scheduled for": "2021-01-14", "URL": "https://stork-search.net/", "Category": "Developer Tools", "Type": "Open Source", "What is it?": "Fast search for static sites.", "What we like": "Generate the index of your content, which is then downloaded by the visitor's browser and searched using the JS/WASM library \"locally\" - this is what makes it so fast.", "What we dislike": "Index must be generated manually. It is specifically designed for static sites, so it would need to be hooked into a build process. Would need extra work if you wanted to index a dynamic site.", "Twitter": "@jameslittle230", "Source": "HN", "favicon": "img/favicons/stork-search.net.png", "Filter Taxonomy": "developer-tools, open-source"}]}