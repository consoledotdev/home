name: Deploy
on:
    schedule:
        - cron: "0 6 * * Mon-Fri"

    workflow_dispatch:
        inputs:
            environment:
                description: "Choose an environment to deploy to: <production|test>"
                required: true
                default: "test"

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout GitHub Action"
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Required to get full history, so hugo :git lastmod works

            - id: "get_data_tools"
              name: Get tools list from Google Sheets
              uses: jroehl/gsheet.action@v1.2.0
              with:
                  spreadsheetId: 1VGVFXtfOAhZqPdY30mrD_4towCj6lCdhuwr35vp4xgM
                  commands: | # list of commands, specified as a valid JSON string
                      [
                          {
                              "command": "getData",
                              "args": {
                                  "range": "'All Tools'!A:O",
                                  "hasHeaderRow": true
                              }
                          }
                      ]
              env:
                  GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
                  GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}

            - name: Write tools to JSON file
              env:
                  RESULTS: ${{ steps.get_data_tools.outputs.results }}
              run: |
                  mkdir data
                  echo "$RESULTS" > data/toolsallraw.json

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: tools-all-raw
                  path: data/toolsallraw.json
                  retention-days: 1

            - id: "get_data_beta"
              name: Get beta list from Google Sheets
              uses: jroehl/gsheet.action@v1.2.0
              with:
                  spreadsheetId: 10SJbUuMWgc-ACOzNydXL16vE_fDwJIP92G4_L8XUhrQ
                  commands: | # list of commands, specified as a valid JSON string
                      [
                          {
                              "command": "getData",
                              "args": {
                                  "range": "'All Programs'!A:Q",
                                  "hasHeaderRow": true
                              }
                          }
                      ]
              env:
                  GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
                  GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}

            - name: Write betas to JSON file
              env:
                  RESULTS: ${{ steps.get_data_beta.outputs.results }}
              run: |
                  echo "$RESULTS" > data/betasallraw.json

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: betas-all-raw
                  path: data/betasallraw.json
                  retention-days: 1

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9"
                  cache: "pip"

            - name: Install pip dependencies
              run: pip install -r requirements.txt

            - name: Parse tools JSON
              run: |
                  python3 parseTools.py \
                  --tools-json data/toolsallraw.json \
                  --beta-json data/betasallraw.json

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: betas-ga
                  path: data/betasga.json
                  retention-days: 1

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: betas-latest
                  path: data/betaslatest.json
                  retention-days: 1

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: betas-live
                  path: data/betaslive.json
                  retention-days: 1

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: tools-latest
                  path: data/toolslatest.json
                  retention-days: 1

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: tools-reviewed
                  path: data/toolsreviewed.json
                  retention-days: 1

            # No drafts in prod. Kept at 0.96 until
            # https://github.com/actions/checkout/issues/760 is fixed
            - name: "hugo build (prod)"
              uses: jakejarvis/hugo-build-action@v0.101.0
              if: github.event.inputs.environment != 'test'

            # Build drafts in the test environment. Kept at 0.96 until
            # https://github.com/actions/checkout/issues/760 is fixed
            - name: "hugo build (test)"
              uses: jakejarvis/hugo-build-action@v0.101.0
              if: github.event.inputs.environment == 'test'
              with:
                  args: --buildDrafts --environment test

            # If this is the automated build then deploy to prod
            # otherwise deploy to wherever is specified
            - name: Deploy to Cloudflare (cron)
              uses: cloudflare/wrangler-action@2.0.0
              if: github.event_name == 'schedule'
              with:
                  apiToken: ${{ secrets.CF_API_TOKEN }}
                  environment: production
                  # Pin wrangler to avoid bugs like this
                  # https://github.com/cloudflare/wrangler/issues/2224
                  # We should upgrade it deliberately
                  wranglerVersion: "1.19.12"

            - name: Deploy to Cloudflare (environment input)
              uses: cloudflare/wrangler-action@2.0.0
              if: github.event_name != 'schedule'
              with:
                  apiToken: ${{ secrets.CF_API_TOKEN }}
                  environment: ${{ github.event.inputs.environment }}
                  # Pin wrangler to avoid bugs like this
                  # https://github.com/cloudflare/wrangler/issues/2224
                  # We should upgrade it deliberately
                  wranglerVersion: "1.19.12"
